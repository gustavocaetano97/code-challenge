---

x-meltano-image: &meltano-image
  build: .

x-meltano-env: &meltano-env
  MELTANO_DATABASE_URI: postgresql://postgres:postgres@meltano-system-db/meltano
  # Add any additional Meltano configuration environment variables here

# # Uncomment if you are using the Airflow orchestrator, delete otherwise
# x-airflow-env: &airflow-env
# AIRFLOW__CORE__SQL_ALCHEMY_CONN: >
#   postgresql+psycopg2://:airflow:airflow@airflowdb:5432/airflow
# AIRFLOW__CORE__EXECUTOR: LocalExecutor

services:
  meltano:
    <<: *meltano-image
    environment:
      <<: *meltano-env
      # <<: *airflow-env ]
    volumes:
      - ./etl_meltano:/project
      - ./logs/elt:/project/.meltano/logs/elt
      - ./etl_meltano/data/local_data/export:/project/data/local_data/export
    expose:
      - 5000
    ports:
      - 5000:5000
    depends_on:
      - meltano-system-db
    networks:
      - meltano
      - airflow
    restart: unless-stopped

  meltano-system-db:
    image: postgres
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: meltano
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - db_meltano:/var/lib/postgresql/data
      - ./etl_meltano/data/local_data/export:/project/data/local_data/export
    expose:
      - 5432
    networks:
      - meltano
    restart: unless-stopped

  # # Uncomment if you are using the Airflow orchestrator, delete otherwise
  airflow-scheduler:
    <<: *meltano-image
    command: invoke airflow scheduler
    environment:
      <<: *meltano-env
      # <<: *airflow-env ]
    volumes:
      - ./logs/elt:/project/.meltano/logs/elt
      - ./etl_meltano/data/local_data/extract:/project/data/local_data/extract
    expose:
      - 8793
    depends_on:
      - meltano-system-db
      - airflowdb
    networks:
      - meltano
      - airflow
    restart: unless-stopped

  airflow-webserver:
    <<: *meltano-image
    command: invoke airflow webserver
    environment:
      <<: *meltano-env
      # <<: *airflow-env ]
    expose:
      - 8080
    volumes:
      - ./logs/elt:/project/.meltano/logs/elt
      - ./etl_meltano/data/local_data/extract:/project/data/local_data/extract
    ports:
      - 8080:8080
    depends_on:
      - meltano-system-db
      - airflowdb
    networks:
      - meltano
      - airflow
    restart: unless-stopped

  airflowdb:
    image: postgres
    environment:
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
      POSTGRES_USER: airflow
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - db_airflow:/var/lib/postgresql/data
    expose:
      - 5432
    networks:
      - airflow
    restart: unless-stopped

  db_north:
    image: postgres:13
    environment:
      POSTGRES_DB: northwind
      POSTGRES_USER: northwind_user
      POSTGRES_PASSWORD: thewindisblowing
    volumes:
      - ./etl_meltano/data/northwind.sql:/docker-entrypoint-initdb.d/northwind.sql
      - ./db_north:/var/lib/postgresql/data
    networks:
      - meltano
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U northwind_user -d northwind"]
      interval: 10s
      timeout: 5s
      retries: 5

  db_final:
    image: postgres:13
    environment:
      POSTGRES_DB: finalwind
      POSTGRES_USER: finalwind_user
      POSTGRES_PASSWORD: finalwindisblowing
    volumes:
      - ./db_final:/var/lib/postgresql/data
    networks:
      - meltano
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U finalwind_user -d finalwind"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

networks:
  meltano:
  # # Uncomment if you are using the Airflow orchestrator, delete otherwise
  airflow:

volumes:
  db_meltano:
    driver: local
  # # Uncomment if you are using the Airflow orchestrator, delete otherwise
  db_north:
    driver: local
  db_airflow:
    driver: local
  db_final:
    driver: local
