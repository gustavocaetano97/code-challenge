version: '3.8'
services:
  db_north:
    image: postgres:13
    environment:
      POSTGRES_DB: northwind
      POSTGRES_USER: northwind_user
      POSTGRES_PASSWORD: thewindisblowing
    volumes:
      - ./data/northwind.sql:/docker-entrypoint-initdb.d/northwind.sql
      - db_north_data:/var/lib/postgresql/data
    networks:
      - meltano
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U northwind_user -d northwind"]
      interval: 10s
      timeout: 5s
      retries: 5

  db_final:
    image: postgres:13
    environment:
      POSTGRES_DB: finalwind
      POSTGRES_USER: finalwind_user
      POSTGRES_PASSWORD: finalwindisblowing
    volumes:
      - db_final_data:/var/lib/postgresql/data
    networks:
      - meltano
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U finalwind_user -d finalwind"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  db_meltano:
    image: postgres:13
    environment:
      POSTGRES_USER: meltano_user
      POSTGRES_PASSWORD: meltano
      POSTGRES_DB: meltano
    volumes:
      - db_meltano_data:/var/lib/postgresql/data
    networks:
      - meltano
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U meltano_user -d meltano"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  db_airflow:
    image: postgres:13
    environment:
      POSTGRES_DB: airflow
      POSTGRES_USER: airflow_user
      POSTGRES_PASSWORD: airflow
    volumes:
      - db_airflow_data:/var/lib/postgresql/data
    networks:
      - meltano
    ports:
      - "5435:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow_user -d airflow"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  meltano:
    image: meltano/meltano:latest-python3.10
    depends_on:
      db_meltano:
        condition: service_healthy
      db_north:
        condition: service_healthy
      db_final:
        condition: service_healthy
      db_airflow:
        condition: service_healthy
    volumes:
      - ./:/project
    networks:
      - meltano
    environment:
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow_user:airflow@db_airflow/airflow
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      MELTANO_DATABASE_URI: postgresql://meltano_user:meltano@db_meltano:5432/meltano
      TARGET_PARQUET_DESTINATION_PATH: /project/data/local_data
    command: ["meltano", "init"]

volumes:
  db_north_data:
  db_final_data:
  db_meltano_data:
  db_airflow_data:

networks:
  meltano:
    driver: bridge
